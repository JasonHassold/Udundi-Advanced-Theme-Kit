#!/bin/bash

usage() {
  echo "Usage: advtheme {command} {options}"
  echo
  echo " Commands:"
  echo
  echo "   Setup: setup {store ex. advanced-theme-kit-tester.myshopify.com} {password}"
  echo
  echo "   Create Branch: branch {branch name}"
  echo "   Delete Branch: branch {branch name} delete"
  echo
  echo "   Watch: watch"
  echo
  echo "   Merge: merge {branch to merge into} {branch being merged}"
}

setup() {
  theme get --list -s=$2 -p=$3
  read -r -p "Theme id (master branch): " theme_id
  theme get -t=$theme_id -s=$2 -p=$3
  wait
  git init
  echo "config.yml" >> .gitignore
  git add .gitignore
  git add * -f
  git commit -m "Initialized"
  read -r -p "Github username: " git_user
  read -r -p "New repo name: " repo_name
  git remote add origin https://github.com/$git_user/$(echo $repo_name | tr ' ' '-').git
  read -r -p "Add repository on github with the same name... " response
  git push -u origin masterthem
}

# $2 branch name
branch() {
  name=$2

  git checkout master
  store=$(cat config.yml | grep store | cut -d ' ' -f 4)
  pass=$(cat config.yml | grep password | cut -d ' ' -f 4)
  theme_id=$(cat config.yml | grep theme_id | cut -d '"' -f 2)
  current_theme_name=$(theme get --list -s=$store -p=$pass | grep $theme_id | cut -d ']' -f 3 | cut -c 2-)
  new_theme_name="$current_theme_name - $name"

  if [ "$3" == 'delete' ]; then
    git branch -D $name
    git push origin --delete $name
    read -r -p "Removed branch theme '$new_theme_name' confirm: " response
  else
    git branch "$name"
    if [ $? -eq 0 ]; then
      echo "Created branch $name"
      git checkout "$name"

      mkdir temptheme
      cd temptheme
      echo "Moved to /temptheme folder"

      theme new --name="$new_theme_name" -s=$store -p=$pass
      wait
      # BACK_PID=$! # get theme new PID
      # while kill -0 $BACK_PID ; do
      #   echo "Process is still active..."
      #   sleep 1
      #   # You can add a timeout here if you want
      # done
      #new_theme_id=$(cat config.yml | grep theme_id | cut -d '"' -f 2)

      cd ..
      cp temptheme/config.yml config.yml
      rm -r temptheme/

      git add *
      git commit -m "Created new theme branch '$new_theme_name'"
      git push --set-upstream origin "$name"

      theme deploy
    fi
  fi
}

watch() {
  git pull
  theme watch
  wait
  git add *
  read -r -p "Commit message: " message
  git commit -m "$message"
  git push
}

merge() {
  git checkout $2
  if git merge $3 | grep -q 'fix conflicts'; then
    read -r -p "Continue once you fix conflicts... " response
  fi
  git add *
  status=$(git status)
  files=$(echo $status | grep 'modified\|new file' | rev | cut -d " " -f 1 | rev)
  deleted_files=$(echo $status | grep 'deleted' | rev | cut -d " " -f 1 | rev)
  read -r -p "Commit message: " message
  git commit -m "$message"
  git push
  #theme deploy
  for file in $files; do
    theme deploy $file
  done
  for file in $deleted_files; do
    theme remove $files
  done
}


case $1 in
  -h | --help) usage ;;
  setup)
    setup "$@"
    ;;
  branch)
    branch "$@"
    ;;
  watch)
    watch "$@"
    ;;
  merge)
    merge "$@"
    ;;
esac
